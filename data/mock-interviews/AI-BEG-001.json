{
    "id": "AI-BEG-001",
    "title": "# AI Development Introduction\n## Machine Learning Fundamentals and Applications",
    "time_limit": 240,
    "questions": [
      {
        "id": "q1",
        "question": "# Machine Learning Basics\n\nStudy this diagram of supervised vs. unsupervised learning:\n\n![ML Types](https://miro.medium.com/max/1400/1*kXKUXVx0YtGriBYJdcAYEA.png)\n\n1. Explain the fundamental difference between supervised and unsupervised learning\n2. For each of the following scenarios, identify whether you would use supervised or unsupervised learning and explain why:\n   - Identifying fraudulent credit card transactions\n   - Grouping customers based on purchasing behavior\n   - Predicting house prices based on features like size and location\n   - Detecting anomalies in server performance metrics\n3. What are the main types of supervised and unsupervised learning algorithms?\n4. Explain the difference between classification and regression problems"
      },
      {
        "id": "q2",
        "question": "# Python for Machine Learning\n\nExamine this Python code for data preprocessing:\n\n```python\nimport pandas as pd\nimport numpy as np\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.model_selection import train_test_split\n\n# Load the dataset\ndf = pd.read_csv('customer_data.csv')\n\n# Examine the first few rows\nprint(df.head())\n\n# Check for missing values\nprint(df.isnull().sum())\n\n# Split features and target\nX = df.drop('churn', axis=1)\ny = df['churn']\n\n# Identify numeric and categorical columns\nnumeric_features = X.select_dtypes(include=['int64', 'float64']).columns\ncategorical_features = X.select_dtypes(include=['object']).columns\n\n# Define preprocessing for numeric features\nnumeric_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='median')),\n    ('scaler', StandardScaler())\n])\n\n# Define preprocessing for categorical features\ncategorical_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='most_frequent')),\n    ('onehot', OneHotEncoder(handle_unknown='ignore'))\n])\n\n# Combine preprocessing steps\npreprocessor = ColumnTransformer(\n    transformers=[\n        ('num', numeric_transformer, numeric_features),\n        ('cat', categorical_transformer, categorical_features)\n    ])\n\n# Split the data into training and test sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Preprocess the data\nX_train_processed = preprocessor.fit_transform(X_train)\nX_test_processed = preprocessor.transform(X_test)\n\nprint(f'Processed training data shape: {X_train_processed.shape}')\nprint(f'Processed test data shape: {X_test_processed.shape}')\n```\n\n1. Explain what each part of this code does and why it's important in the machine learning workflow\n2. What issues in the data is this preprocessing addressing? \n3. Modify this code to include:\n   - Handling outliers in numeric features\n   - Feature selection to reduce dimensionality\n   - Cross-validation instead of a simple train/test split\n4. What libraries and tools are commonly used for machine learning in Python?\n5. How would you visualize the data to gain insights before building models?"
      },
      {
        "id": "q3",
        "question": "# Neural Networks and Deep Learning\n\nStudy this visual representation of a neural network:\n\n![Neural Network](https://miro.medium.com/max/1400/1*3fA77_mLNiJTSgZFhYnU0Q.png)\n\n1. Explain the basic components of a neural network (neurons, weights, biases, activation functions)\n2. Describe the difference between:\n   - Convolutional Neural Networks (CNNs)\n   - Recurrent Neural Networks (RNNs)\n   - Transformers\n3. For each of these architectures, provide an example application where they excel\n4. Explain the concept of backpropagation and its role in training neural networks\n5. What is the \"vanishing gradient problem\" and how can it be addressed?\n6. Describe common techniques to prevent overfitting in deep learning models"
      },
      {
        "id": "q4",
        "question": "# Model Evaluation and Deployment\n\nExamine these model evaluation metrics:\n\n![Confusion Matrix](https://miro.medium.com/max/1400/1*fxiTNIgOyvAombPJx5KGeA.png)\n\n```python\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n\n# For classification\ny_pred = model.predict(X_test)\nprint(f'Accuracy: {accuracy_score(y_test, y_pred):.4f}')\nprint(f'Precision: {precision_score(y_test, y_pred):.4f}')\nprint(f'Recall: {recall_score(y_test, y_pred):.4f}')\nprint(f'F1 Score: {f1_score(y_test, y_pred):.4f}')\nprint('Confusion Matrix:')\nprint(confusion_matrix(y_test, y_pred))\n\n# For regression\ny_pred = reg_model.predict(X_test)\nprint(f'Mean Squared Error: {mean_squared_error(y_test, y_pred):.4f}')\nprint(f'Mean Absolute Error: {mean_absolute_error(y_test, y_pred):.4f}')\nprint(f'RÂ² Score: {r2_score(y_test, y_pred):.4f}')\n```\n\n1. Explain each of the evaluation metrics shown above and when you would use each one\n2. In which scenarios would you prioritize precision over recall, and vice versa?\n3. Design an end-to-end workflow for:\n   - Training a model\n   - Evaluating its performance\n   - Deploying it to production\n   - Monitoring its performance over time\n4. Discuss the challenges of deploying machine learning models in production environments\n5. What is MLOps and why is it important?\n6. How would you handle concept drift in deployed models?"
      },
      {
        "id": "q5",
        "question": "# Ethical Considerations in AI\n\nWatch this short video on AI bias:\n\n![AI Ethics: Bias and Fairness](https://www.youtube.com/watch?v=59bMh59JQDo)\n\n1. Define algorithmic bias and explain how it can arise in machine learning systems\n2. Consider this scenario: You're developing a model to help screen job applicants for a technical position. What ethical considerations should you address?\n3. How would you:\n   - Test for bias in your model\n   - Mitigate any biases discovered\n   - Create transparency around how the model makes decisions\n4. Discuss the tension between model explainability and performance\n5. What regulations or guidelines exist regarding ethical AI development?\n6. Beyond bias, what other ethical considerations are important in AI development?"
      }
    ]
  }